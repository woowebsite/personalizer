type ProductBase {
  id: Int
  title: String
  description: String
  status: String
  primaryImageUrl: String
  providerId: String
  visibility: String
  publishDate: Date
  user: User

  metadata: [ProductBaseMeta]
  productBaseTerms: [ProductBaseTerm]
}

input ProductBaseWhere {
  user_id: Int
  id: Int
  status: String
}

input ProductBaseInput {
  id: Int
  title: String
  description: String
  status: String
  primaryImageUrl: String
  providerId: String
  publishDate: Date
  visibility: String
  user_id: Int
}

type ProductBasesPaged {
  rows: [ProductBase]
  count: Int
}

type Query {
  productBase(where: ProductBaseWhere): ProductBase
  productBases(
    where: ProductBaseWhere
    limit: Int
    offset: Int
  ): ProductBasesPaged
}

type Mutation {
  upsertProductBase(
    data: ProductBaseInput
    metadata: [ProductBaseMetaInput]
    taxonomies: [Int]
  ): ProductBase
  deleteProductBase(id: Int): Int
}
