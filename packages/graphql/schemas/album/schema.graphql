type File {
  id: String!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

type Album {
  id: Int
  name: String
  description: String
  image: String
  user: User
}

input AlbumWhere {
  id: Int
  userId: Int
}

input AlbumInput {
  name: String
  description: String
  image: String
  userId: Int
}

type Query {
  getAlbum(where: AlbumWhere): Album
  getAlbums(where: AlbumWhere, limit: Int, offset: Int): Album
}

type Mutation {
  createAlbum(data: AlbumInput): Album
  uploadFile(file: Upload!): File!
}
